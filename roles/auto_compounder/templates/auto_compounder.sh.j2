#!/bin/bash -e

# Constants
KEY="{{ key }}"
PASSPHRASE="{{ passphrase }}"
DENOM="{{ denomination }}"
THRESHOLD="{{ threshold}}"
BINARY="{{ daemon }}"
CHAIN_ID="{{ chain_id }}"
TRANSACNTION_EXTRA_FLAG="{{ transaction_extra_flag }}"

# Get account address
KEY_STATUS=$(echo ${PASSPHRASE} | $BINARY keys show ${KEY} --output json)
ACCOUNT_ADDRESS=$(echo ${KEY_STATUS} | jq -r ".address")

# Get validator operator
VALIDATOR_STATUS=$(echo ${PASSPHRASE} | $BINARY keys show ${KEY} --bech val --output json)
VALIDATOR=$(echo ${VALIDATOR_STATUS} | jq -r ".address")

# Get account balance
ACCOUNT_BANK=$($BINARY q bank balances ${ACCOUNT_ADDRESS} --output json)
ACCOUNT_BALANCE=$(echo ${ACCOUNT_BANK} | jq -r ".balances[] | select(.denom == \"${DENOM}\") | .amount" || true)

# Get rewards amount excluding commission
REWARDS_STATUS=$($BINARY q distribution rewards ${ACCOUNT_ADDRESS} ${VALIDATOR} --output json)
REWARDS_BALANCE=$(echo ${REWARDS_STATUS} | jq -r ".rewards[] | select(.denom == \"${DENOM}\") | .amount" || true)
REWARDS_BALANCE=${REWARDS_BALANCE%.*}

# Some debug info just in case
echo "======================================================"
echo "ACCOUNT: ${KEY}"
echo "ACCOUNT_ADDRESS: ${ACCOUNT_ADDRESS}"
echo "VALIDATOR: ${VALIDATOR}"
echo "======================================================"
echo "ACCOUNT_BALANCE:      ${ACCOUNT_BALANCE}${DENOM}"
echo "REWARDS_BALANCE:    ${REWARDS_BALANCE}${DENOM}"
echo "THRESHOLD:    ${THRESHOLD}${DENOM}"
echo

# Claim rewards if the amount is more than the threshold
if [ $REWARDS_BALANCE -gt $THRESHOLD ]
then
    echo "Withdrawing rewards... ${REWARDS_BALANCE}${DENOM}"
    echo ${PASSPHRASE} | $BINARY tx distribution withdraw-rewards ${VALIDATOR} --commission --yes --from ${KEY} --chain-id ${CHAIN_ID} ${TRANSACNTION_EXTRA_FLAG} --broadcast-mode async
fi

# Sleep a bit for the transaction to propogate
sleep 20

# Get the new account balance
ACCOUNT_BANK_NEW=$($BINARY q bank balances ${ACCOUNT_ADDRESS} --output json)
ACCOUNT_BALANCE_NEW=$(echo ${ACCOUNT_BANK_NEW} | jq -r ".balances[] | select(.denom == \"${DENOM}\") | .amount" || true)

# Some debug info
echo "======================================================"
echo "Account balance new:  ${ACCOUNT_BALANCE_NEW}${DENOM}  "
echo "======================================================"
echo

# Delegate the maximum amount to compount the rewards if passing the threshold
if [ $ACCOUNT_BALANCE_NEW -gt $THRESHOLD ]
then
    DELEGATION_AMOUNT=$((${ACCOUNT_BALANCE_NEW} - ${THRESHOLD}))
    echo "delegating rewards... ${DELEGATION_AMOUNT}${DENOM}"
    echo ${PASSPHRASE} | $BINARY tx staking delegate ${VALIDATOR} ${DELEGATION_AMOUNT}${DENOM} --yes --from ${KEY} --chain-id ${CHAIN_ID} ${TRANSACNTION_EXTRA_FLAG} --broadcast-mode async
fi